---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ osp_servers.app1.name }}"
    image: "{{ osp_servers.app1.image }}"
    meta:
      group: "{{ osp_servers.app1.meta.group }}"
      deployment_name: "{{ osp_servers.app1.meta.deployment_name }}"
    state: "{{ osp_servers.app1.state }}"
    flavor: "{{ osp_servers.app1.flavor }}"
    security_groups: "{{ osp_servers.app1.security_group }}"
    key_name: "{{ osp_servers.app1.key_name }}"
    nics:
    - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  register: instanceip

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: ospcloud
    server: "{{ osp_servers.app1.name }}"
    network: ext_network

- name: frontned - Show "{{ instanceip }}" floating (public) IP
  debug: var=instancefloatingip.floating_ip.floating_ip_address

- name: app1 - Wait for server to be available
  wait_for:
   host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
   port: 22
   search_regex: OpenSSH
   timeout: 600
  delegate_to: "{{ inventory_hostname }}" 
